// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: saving.proto

package savingservice

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// SavingServiceClient is the client API for SavingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SavingServiceClient interface {
}

type savingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSavingServiceClient(cc grpc.ClientConnInterface) SavingServiceClient {
	return &savingServiceClient{cc}
}

// SavingServiceServer is the server API for SavingService service.
// All implementations must embed UnimplementedSavingServiceServer
// for forward compatibility
type SavingServiceServer interface {
	mustEmbedUnimplementedSavingServiceServer()
}

// UnimplementedSavingServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSavingServiceServer struct {
}

func (UnimplementedSavingServiceServer) mustEmbedUnimplementedSavingServiceServer() {}

// UnsafeSavingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SavingServiceServer will
// result in compilation errors.
type UnsafeSavingServiceServer interface {
	mustEmbedUnimplementedSavingServiceServer()
}

func RegisterSavingServiceServer(s grpc.ServiceRegistrar, srv SavingServiceServer) {
	s.RegisterService(&SavingService_ServiceDesc, srv)
}

// SavingService_ServiceDesc is the grpc.ServiceDesc for SavingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SavingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.savingservice.SavingService",
	HandlerType: (*SavingServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "saving.proto",
}
